(define v1 '[foo bar (snafu blorg)])
(define beverages '{scotch laphroig rye bulleit
                    vodka no-thanks beer pilsner
                    water tap wine (bordeaux red)})

(define-proc add
  ([] 0)
  ([a] a)
  ([a b] (+ a b))
  ([a b c] (+ a b c))
  ([a b c d & e] (apply + a b c d e)))

(define-proc sine
  [theta] (sin theta))

(define-proc inc-all [xs]
  (map #([[x] & rest :as args]
         (+ x 1))
       xs (iota 100)))

(define-proc pick [col & offsets]
  (map #([i] (col i)) offsets))

(define-proc drink-ingredients [{:keys [scotch water]}]
  (list scotch water))

(define-proc drink-ingredients* [{s 'scotch w 'water :as bevs}]
  (list s w 'bevs-length (*-length bevs)))

(test-begin)
(test '(1 2 3 4) (inc-all '([0] [1] [2] [3])))
(test '(laphroig tap (bordeaux red)) (pick beverages 'scotch 'water 'wine))
(test '((snafu blorg)) (pick v1 2))
(test '(laphroig tap) (drink-ingredients beverages))
(test '(laphroig tap bevs-length 6) (drink-ingredients* beverages))
(test-end)
